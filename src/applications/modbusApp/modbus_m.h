//
// Generated file, do not edit! Created by opp_msgc 4.2 from applications/modbusApp/modbus.msg.
//

#ifndef _MODBUS_M_H_
#define _MODBUS_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "INETDefs.h"
// }}



/**
 * Class generated from <tt>applications/modbusApp/modbus.msg</tt> by opp_msgc.
 * <pre>
 * packet Modbus {
 *     int length;
 *     uint8_t pdu[];;
 *     double reply_delay;
 *     bool close_conn;
 * }
 * </pre>
 */
class Modbus : public ::cPacket
{
  protected:
    int length_var;
    uint8_t *pdu_var; // array ptr
    unsigned int pdu_arraysize;
    double reply_delay_var;
    bool close_conn_var;

  private:
    void copy(const Modbus& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Modbus&);

  public:
    Modbus(const char *name=NULL, int kind=0);
    Modbus(const Modbus& other);
    virtual ~Modbus();
    Modbus& operator=(const Modbus& other);
    virtual Modbus *dup() const {return new Modbus(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getLength() const;
    virtual void setLength(int length);
    virtual void setPduArraySize(unsigned int size);
    virtual unsigned int getPduArraySize() const;
    virtual uint8_t getPdu(unsigned int k) const;
    virtual void setPdu(unsigned int k, uint8_t pdu);
    virtual double getReply_delay() const;
    virtual void setReply_delay(double reply_delay);
    virtual bool getClose_conn() const;
    virtual void setClose_conn(bool close_conn);
};

inline void doPacking(cCommBuffer *b, Modbus& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Modbus& obj) {obj.parsimUnpack(b);}


#endif // _MODBUS_M_H_
